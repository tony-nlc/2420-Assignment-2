#!/bin/bash
# Filename: setup
# Description: Run setup and link scripts
# Reference:
# [8] https://ss64.com/bash/ps.html
# [9] https://ss64.com/bash/sudo.html

################################################################################
# Initiaiization                                                               #
################################################################################

# Set a variable for username
user=$SUDO_USER
# Set a requirement variable default value as requirement
file_path="/home/$user/requirement"

################################################################################
# Error Handling                                                               #
################################################################################

# Check if the script is run by root privillege [8]
if [[ $EUID -ne 0 ]]; then
  # Print an error message
  echo "You need to 'sudo' this script"
  # Exit the script
  exit 1
fi

################################################################################
# Help                                                                         #
################################################################################

# Show the usage of the script
show_help() {
  echo "Usage: $0 -r <file path> -u <username>"
  echo "  -r <filepath>           File path of requirement file"
  echo "  -u <user>               User we are linking the config and bin"
  exit 0
}

################################################################################
# Main program                                                                 #
################################################################################

# Parsing argument into variable
while getopts ":r:u:h" opt; do
  case "${opt}" in
  r)
    # Assign OPTARG's value to requirement
    file_path=${OPTARG}
    ;;
  u)
    # Assign OPTARG's value to user variable
    user=${OPTARG}
    ;;
  h)
    # Print help message
    show_help
    ;;
  :)
    # Exit script if OPTARGV is missing
    exit 1
    ;;
  ?)
    # Exit script for invalid option
    exit 1
    ;;
  esac
done

echo
echo Installing
# Print a separator line
printf "%60s" " " | tr ' ' '-'
echo
# Run  install script
./install $user $file_path
echo

echo Linking
# Print a separator line
printf "%60s" " " | tr ' ' '-'
echo
# Run link script
./link $user
echo
